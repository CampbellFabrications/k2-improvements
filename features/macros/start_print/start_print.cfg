### WARNING: Do not edit this file, changes will be overwritten! ###

# to make changes, copy this macro to the overrides.cfg in the custom/ directory

[gcode_macro _START_PRINT_VARS]
######################################################################
# !!! copy the [gcode_macro _START_PRINT_VARS] to overrides.cfg and re-define your material offset there !!!
# !!! Or chmod this file to make it writeable and saved here (not recommended)
######################################################################
variable_offset_ABS : 0
variable_offset_ABS-GF : 0
variable_offset_ASA : 0
variable_offset_ASA-Aero : 0
variable_offset_ASA-CF : 0
variable_offset_BVOH : 0
variable_offset_Carbon : 0
variable_offset_EVA : 0
variable_offset_HIPS : 0
variable_offset_PA : 0
variable_offset_PA-CF : 0
variable_offset_PAHT-CF : 0
variable_offset_PA-GF : 0
variable_offset_PA11-CF : 0
variable_offset_PA12-CF : 0
variable_offset_PA6-CF : 0
variable_offset_PA612-CF : 0
variable_offset_PC : 0
variable_offset_PC-ABS : 0
variable_offset_PC-CF : 0
variable_offset_PE : 0
variable_offset_PE-CF : 0
variable_offset_PET : 0
variable_offset_PET-CF : 0
variable_offset_PETG : 0
variable_offset_PETG-CF : 0
variable_offset_PHA : 0
variable_offset_PLA : 0
variable_offset_PLA-AERO : 0
variable_offset_PLA-CF : 0
variable_offset_PP : 0
variable_offset_PP-CF : 0
variable_offset_PP-GF : 0
variable_offset_PPA-CE : 0
variable_offset_PPA-CF : 0
variable_offset_PPS : 0
variable_offset_PPS-CF : 0
variable_offset_PVA : 0
variable_offset_PVB : 0
variable_offset_TPC : 0
variable_offset_TPU : 0
variable_offset_DEFAULT: 0
variable_offset_PROBE: 0
variable_heat_soak: 5 # minutes
gcode:

# if you find you need to alter this macro, please file a feature request
# at https://github.com/campbellfabrications/k2-improvements

[gcode_macro START_PRINT]
# be sure to update your slicer to pass in both chamber temp and material type, for Creality Print:
# START_PRINT EXTRUDER_TEMP=[nozzle_temperature_initial_layer] BED_TEMP=[bed_temperature_initial_layer_single] CHAMBER_TEMP=[overall_chamber_temperature] MATERIAL={filament_type[initial_tool]}
variable_prepare: 0
gcode:
  M117 START_PRINT

  BOX_START_PRINT  # what exactly does this do? - Jamin 
  # It instantiates the motors to listen to feedback and control commands, as far as i know
  # as opposed to printing from the external spool holder, this command is never called.
  # As far as ive tested, theres no issue calling it regardless. - CampbellFabrications
  G90
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(0)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
  {% set EXTRUDER_WAITTEMP = (140.0|float)|int %}
  {% set MATERIAL = params.MATERIAL|default('')|string %}

  {% if printer['gcode_macro _START_PRINT_VARS'].offset_probe == 1 %}
    RESPOND MSG="Not adjusting Z offset relying on probe ..."
  {% else %}
  # This block handles all known Material Types bundled with Creality Print 6.2, including case-sensitive options like ASA-Aero and "Carbon"
  # You get all the granularity you need, even if you never need it.
  # Add {% set HEAT_BUMP = 1 %} to any filaments that require a minimum chamber temperature. This list will become populated as materials are identified.
    {% if MATERIAL == 'ABS' %}
      {% set HEAT_BUMP = 1 %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_ABS %}
    {% elif MATERIAL == 'ABS-GF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_ABS-GF %}
    {% elif MATERIAL == 'ASA' %}
      {% set HEAT_BUMP = 1 %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_ASA %}
    {% elif MATERIAL == 'ASA-Aero' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_ASA-Aero %}
    {% elif MATERIAL == 'ASA-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_ASA-CF %}
    {% elif MATERIAL == 'BVOH' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_BVOH %}
    {% elif MATERIAL == 'Carbon' %} # this is a weird one because of its naming within Creality Print. Not sure if its meant to be there, but its coded for
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_Carbon %}
    {% elif MATERIAL == 'EVA' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_EVA %}
    {% elif MATERIAL == 'HIPS' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_HIPS %}
    {% elif MATERIAL == 'PA' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA %}
    {% elif MATERIAL == 'PA-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA-CF %}
    {% elif MATERIAL == 'PA-GF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA-GF %}
    {% elif MATERIAL == 'PAHT-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PAHT-CF %}
    {% elif MATERIAL == 'PA11-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA11-CF %}
    {% elif MATERIAL == 'PA12-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA12-CF %}
    {% elif MATERIAL == 'PA6-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA6-CF %}
    {% elif MATERIAL == 'PA612-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PA612-CF %}
    {% elif MATERIAL == 'PC' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PC %}
    {% elif MATERIAL == 'PCTG' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PCTG %}
    {% elif MATERIAL == 'PC-ABS' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PC-ABS %}
    {% elif MATERIAL == 'PC-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PC-CF %}
    {% elif MATERIAL == 'PE' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PE %}
    {% elif MATERIAL == 'PE-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PE-CF %}
    {% elif MATERIAL == 'PET' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PET %}
    {% elif MATERIAL == 'PET-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PET_CF %}
    {% elif MATERIAL == 'PETG' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PETG %}
    {% elif MATERIAL == 'PETG-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PETG-CF %}
    {% elif MATERIAL == 'PHA' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PHA %}
    {% elif MATERIAL == 'PLA' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PLA %}
    {% elif MATERIAL == 'PLA-AERO' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PLA-AERO %}
    {% elif MATERIAL == 'PLA-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PLA-CF %}
    {% elif MATERIAL == 'PLA-LW' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PLA-LW %}
    {% elif MATERIAL == 'PP' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PP %}
    {% elif MATERIAL == 'PP-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PP-CF %}
    {% elif MATERIAL == 'PP-GF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PP-GF %}
    {% elif MATERIAL == 'PPA-CE' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PPA-CE %}
    {% elif MATERIAL == 'PPA-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PPA-CF %}
    {% elif MATERIAL == 'PPS' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PPS %}
    {% elif MATERIAL == 'PPS-CF' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PPS-CF %}
    {% elif MATERIAL == 'PVA' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PVA %}
    {% elif MATERIAL == 'PVB' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_PVB %}
    {% elif MATERIAL == 'TPC' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_TPC %}
    {% elif MATERIAL == 'TPU' %}
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_TPU %}
    {% else %}
      # default value
      {% set OFFSET = printer['gcode_macro _START_PRINT_VARS'].offset_DEFAULT %}
    {% endif %}

    RESPOND MSG="Setting Z offset for {MATERIAL} of {OFFSET} ..."
    SET_GCODE_OFFSET Z={OFFSET}
  {% endif %}

  {% if 'scanner' not in printer %}
    # presumably prtouch, so try to ensure the nozzle is clear
    BOX_NOZZLE_CLEAN
  {% endif %}

  # better safe than sorry, re-homing is a small price to pay
  G28
  # ensure bed is level
  # some users have reported that the bed does not raise uniformly from the bottom
  Z_TILT_ADJUST
  # rehome Z after tilt adjust
  G28 Z

  {% if CHAMBER_TEMP > 0 %}
    M141 S{CHAMBER_TEMP}
  {% endif %}

  # when is a print prepared?
  {% if printer['gcode_macro START_PRINT'].prepare|int == 0 %}
    {action_respond_info("print prepared 111")}
    M106 S0  # No need to turn off the model fan
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_WAITTEMP}
    SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=5000
    M104 S{EXTRUDER_WAITTEMP}
    M117 Heating bed ...
    M190 S{BED_TEMP}
    M109 S{EXTRUDER_WAITTEMP}
    BOX_NOZZLE_CLEAN#M1501
    # Return to zero
    NEXT_HOMEZ_NACCU
    G28 Z
    # BED_MESH_CALIBRATE
    # CXSAVE_CONFIG
  {% else %}
    PRINT_PREPARE_CLEAR
  {% endif %}

  # don't want to accidently turn off chamber heating if a temp wasn't passed in
  {% if CHAMBER_TEMP > 0 %}
    M191 S{CHAMBER_TEMP}
  {% endif %}

  M109 S{EXTRUDER_WAITTEMP}

  # Ensure bed is at the desired temp
  # works around some firmware bugs that sometimes turn off the bed
  M190 S{BED_TEMP}


  {% if CHAMBER_TEMP > 0 %}
    {% set SOAK_TIME = printer['gcode_macro _START_PRINT_VARS'].heat_soak|float %}
    {% if SOAK_TIME > 0 %}
      M117 Heat soaking ...
      RESPOND MSG="Heat soaking for {SOAK_TIME} minutes"
      G4 P{60000 * SOAK_TIME}
    {% endif %}
  {% endif %}

  # ensure a nozzle wipe happens before touching the bed
  BOX_NOZZLE_CLEAN

  {% if printer.scanner %} # cartographer
    BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1
    CARTOGRAPHER_TOUCH
  {% else %} # everyone else
    # !!! this MUST come after all G28s as they reset the mesh to "default"
    # load the mesh for the current bed and chamber temp
    MESH_IF_NEEDED BED_TEMP={BED_TEMP} CHAMBER_TEMP={CHAMBER_TEMP}
    RESPOND MSG="Loading bed mesh: {BED_TEMP}c_{CHAMBER_TEMP}c ..."
    BED_MESH_PROFILE LOAD={BED_TEMP}c_{CHAMBER_TEMP}c
    M117 MESH: {BED_TEMP}c_{CHAMBER_TEMP}c
  {% endif %}

  BOX_GO_TO_EXTRUDE_POS#M1500
  M109 S{EXTRUDER_TEMP} ;wait nozzle heating

  # the stock chamber heater configuration is watermark
  # which means at best it will reach the target temp, but rarely exceed it
  # for materials like ASA the chamber temp should be a _minimum_, so we set 5 above it
  {% if HEAT_BUMP == 1 %}
    {% if CHAMBER_TEMP > 0 %}
      {% if CHAMBER_TEMP + 5 <= 60 %}
        M141 S{CHAMBER_TEMP + 5}
      {% else %}
        M141 S60
      {% endif %}
    {% endif %}
  {% endif %}


  M220 S100 ;Reset Feedrate
  # M221 S100 ;Reset Flowrate
  G21
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000

  G92 E0 ; Reset Extruder
  SET_PIN PIN=extruder_fan VALUE=1
  M117 Printing ...

[respond]
